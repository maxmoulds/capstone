#testing 
------------------
Destroy algorithms -- return type should somehow mate with what User.destroy gives? 
maybe delegate_to_algorithm can do that?  or it can know to hand off to a 
delegate_destroy_to_algorithm which returns true/false and sets errors?
maybe we don't want model errors at all. hmmm
------------------
  # does this constrain what this alg can return? (match destroy return)
  # how to connect into containing algorith transaction? -- single threaded can probably do with global store
  # do we disable all of the model's before_destroy and similar?

  # could say delegate destroy in activerecord::base, have that delegate
  #   to a dynamically created class figured out from the delegated method
  #   and target class -- actually could use our own fancy_delegate method
  #   that would search out the appropriate Algorithm
  #     delegate_to_algorithm :destroy -- if have unconventional algorithm ********* do this
  #     name, let coder specify
  #     we'd need this code to be loaded before the models were loaded I think


------
each doorkeeper application should have an uploaded logo that we
can show on the login page
-----------
If you are signed in and go to identity register again, freaks out with DB constraint
exception -- should stop this before that point
-----
how to keep user name, etc, in sync.  Other sites can register an API call when 
registering as OS applications (then we push the data out).
When other apps do a sign in, they can check for updates
----
probably can't use gravatar for avatars since there are security risks (unless we 
let people opt-in)
